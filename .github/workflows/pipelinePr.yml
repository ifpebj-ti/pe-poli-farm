name: Pull requests CI

on:
  pull_request:
    paths:
      - 'frontend/**'
      - 'backend/**'

jobs:
  frontend:
      name: Frontend CI
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v3
          with:
            node-version: '18'
        
        - name: Install dependencies
          run: |
            cd frontend
            npm install
  
        - name: Run ESLint
          run: |
            cd frontend
            npm run lint

        - name: Run Scan SonarQube
          uses: SonarSource/sonarqube-scan-action@v5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          with: 
            projectBaseDir: frontend
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
        - name: Run Build
          run: |
            cd frontend
            docker build -t polifarm-frontend:latest .

        - name: Docker Login
          uses: docker/login-action@v3.4.0
          with:
            username: ${{ secrets.DOCKER_HUB_USER }}
            password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        
        - name: Scan Docker image (Docker Scout)
          run: |
            curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
            sh install-scout.sh
            docker scout quickview polifarm-frontend:latest
            docker scout cves "-only-severity critical --exit-code 1 polifarm-frontend:latest || exit 0"

  backend:
    name: Backend CI
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'
      
      - name: Install dependencies
        run: |
          cd backend
          dotnet restore

      - name: Run Build
        run: |
          cd backend
          docker build -t polifarm-backend:latest .
          
      - name: Run Tests
        run: |
          cd backend
          echo "Ainda n√£o tem testes"

      - name: Docker Login
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Scan Docker image (Docker Scout)
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh
          docker scout quickview polifarm-backend:latest
          docker scout cves "-only-severity critical --exit-code 1 polifarm-backend:latest || exit 0"
